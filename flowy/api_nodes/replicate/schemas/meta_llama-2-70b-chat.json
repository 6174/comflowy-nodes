{
    "url": "https://replicate.com/meta/llama-2-70b-chat",
    "owner": "meta",
    "name": "llama-2-70b-chat",
    "description": "A 70 billion parameter language model from Meta, fine tuned for chat completions",
    "visibility": "public",
    "github_url": "https://github.com/a16z-infra/cog-llama-template",
    "paper_url": "https://ai.meta.com/research/publications/llama-2-open-foundation-and-fine-tuned-chat-models/",
    "license_url": "https://ai.meta.com/resources/models-and-libraries/llama-downloads/",
    "run_count": 0,
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/70238cb4-e24b-43ed-96e0-5f7d98f9cc3f/future-llama-70b-chat.jpg",
    "default_example": {
        "id": "ssetyuzew3nbe5ndybmon5wmmq",
        "model": "meta/llama-2-70b-chat",
        "version": "2d19859030ff705a87c746f7e96eea03aefb71f166725aee39692f1476566d48",
        "status": "succeeded",
        "input": {
            "debug": false,
            "top_p": 1,
            "prompt": "Can you write a poem about open source machine learning? Let's make it in the style of E. E. Cummings.",
            "temperature": 0.5,
            "system_prompt": "You are a helpful, respectful and honest assistant. Always answer as helpfully as possible, while being safe. Your answers should not include any harmful, unethical, racist, sexist, toxic, dangerous, or illegal content. Please ensure that your responses are socially unbiased and positive in nature.\n\nIf a question does not make any sense, or is not factually coherent, explain why instead of answering something not correct. If you don't know the answer to a question, please don't share false information.",
            "max_new_tokens": 500,
            "min_new_tokens": -1
        },
        "output": [
            "Sure",
            ",",
            " here",
            "'",
            "s",
            " a",
            " poem",
            " about",
            " open",
            " source",
            " machine",
            " learning",
            " in",
            " the",
            " style",
            " of",
            " E",
            ".",
            " E",
            ".",
            " C",
            "umm",
            "ings",
            ":",
            "\n\nopen",
            " source",
            " machine",
            " learning",
            "\na",
            " gift",
            " to",
            " the",
            " world",
            ",",
            " a",
            " tre",
            "asure",
            " tro",
            "ve",
            "\nof",
            " knowledge",
            ",",
            " free",
            " for",
            " all",
            " to",
            " use",
            "\nand",
            " learn",
            " from",
            ",",
            " like",
            " a",
            " digital",
            " muse",
            "\n\nwith",
            " code",
            " that",
            "'",
            "s",
            " open",
            " and",
            " transparent",
            "\nany",
            "one",
            " can",
            " see",
            ",",
            " anyone",
            " can",
            " t",
            "ink",
            "er",
            "\nand",
            " improve",
            " upon",
            ",",
            " a",
            " collabor",
            "ative",
            " dance",
            "\nof",
            " innov",
            "ation",
            ",",
            " without",
            " a",
            " single",
            " anchor",
            "\n\nthe",
            " community",
            " shares",
            " and",
            " shapes",
            " it",
            "\nt",
            "ogether",
            " they",
            " build",
            " and",
            " ref",
            "ine",
            "\na",
            " tool",
            " that",
            "'",
            "s",
            " greater",
            " than",
            " the",
            " sum",
            " of",
            " its",
            " parts",
            "\na",
            " true",
            " dem",
            "ocracy",
            " of",
            " mind",
            " and",
            " design",
            "\n\nfrom",
            " deep",
            " learning",
            " to",
            " natural",
            " language",
            "\nit",
            "'",
            "s",
            " all",
            " here",
            ",",
            " a",
            " bound",
            "less",
            " exp",
            "anse",
            "\nof",
            " possibility",
            ",",
            " a",
            " play",
            "ground",
            " for",
            " thought",
            "\nwhere",
            " anyone",
            " can",
            " explore",
            " and",
            " advance",
            "\n\nso",
            " come",
            " and",
            " join",
            " this",
            " movement",
            "\nemb",
            "race",
            " the",
            " power",
            ",",
            " the",
            " beauty",
            ",",
            " the",
            " grace",
            "\nof",
            " open",
            " source",
            " machine",
            " learning",
            "\nand",
            " watch",
            " the",
            " future",
            " unfold",
            " with",
            " ease",
            "."
        ],
        "logs": "MLC is currently not using any LoRAs.\r\nYour formatted prompt is:\r\n[INST] <<SYS>>\r\nYou are a helpful, respectful and honest assistant. Always answer as helpfully as possible, while being safe. Your answers should not include any harmful, unethical, racist, sexist, toxic, dangerous, or illegal content. Please ensure that your responses are socially unbiased and positive in nature.\r\nIf a question does not make any sense, or is not factually coherent, explain why instead of answering something not correct. If you don't know the answer to a question, please don't share false information.\r\n<</SYS>>\r\nCan you write a poem about open source machine learning? Let's make it in the style of E. E. Cummings. [/INST]\r\nNot using LoRA\r\nhostname: model-d-c6559c5791b50af57b69f4a73f8e021c-7d68c66789-ntgcq",
        "error": "",
        "metrics": {
            "input_token_count": 144,
            "tokens_per_second": 44.006748551816564,
            "output_token_count": 207,
            "predict_time": 4.703926,
            "total_time": 4.233429
        },
        "created_at": "2023-12-12T10:05:02.766571Z",
        "started_at": "2023-12-12T10:05:02Z",
        "completed_at": "2023-12-12T10:05:07Z",
        "urls": {
            "stream": "https://streaming-api.svc.europe-west4.g.replicate.net/v1/predictions/ssetyuzew3nbe5ndybmon5wmmq",
            "get": "https://api.replicate.com/v1/predictions/ssetyuzew3nbe5ndybmon5wmmq",
            "cancel": "https://api.replicate.com/v1/predictions/ssetyuzew3nbe5ndybmon5wmmq/cancel"
        }
    },
    "latest_version": {
        "id": "02e509c789964a7ea8736978a43525956ef40397be9033abf9fd2badfe68c9e3",
        "created_at": "2023-09-13T15:41:34.688650+00:00",
        "cog_version": "0.8.1",
        "openapi_schema": {
            "info": {
                "title": "Cog",
                "version": "0.1.0"
            },
            "paths": {
                "/": {
                    "get": {
                        "summary": "Root",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Root  Get"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "operationId": "root__get"
                    }
                },
                "/shutdown": {
                    "post": {
                        "summary": "Start Shutdown",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Start Shutdown Shutdown Post"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "operationId": "start_shutdown_shutdown_post"
                    }
                },
                "/predictions": {
                    "post": {
                        "summary": "Predict",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/PredictionResponse"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "parameters": [
                            {
                                "in": "header",
                                "name": "prefer",
                                "schema": {
                                    "type": "string",
                                    "title": "Prefer"
                                },
                                "required": false
                            }
                        ],
                        "description": "Run a single prediction on the model",
                        "operationId": "predict_predictions_post",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/PredictionRequest"
                                    }
                                }
                            }
                        }
                    }
                },
                "/health-check": {
                    "get": {
                        "summary": "Healthcheck",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Healthcheck Health Check Get"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "operationId": "healthcheck_health_check_get"
                    }
                },
                "/predictions/{prediction_id}": {
                    "put": {
                        "summary": "Predict Idempotent",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/PredictionResponse"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "parameters": [
                            {
                                "in": "path",
                                "name": "prediction_id",
                                "schema": {
                                    "type": "string",
                                    "title": "Prediction ID"
                                },
                                "required": true
                            },
                            {
                                "in": "header",
                                "name": "prefer",
                                "schema": {
                                    "type": "string",
                                    "title": "Prefer"
                                },
                                "required": false
                            }
                        ],
                        "description": "Run a single prediction on the model (idempotent creation).",
                        "operationId": "predict_idempotent_predictions__prediction_id__put",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/PredictionRequest"
                                            }
                                        ],
                                        "title": "Prediction Request"
                                    }
                                }
                            },
                            "required": true
                        }
                    }
                },
                "/predictions/{prediction_id}/cancel": {
                    "post": {
                        "summary": "Cancel",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "parameters": [
                            {
                                "in": "path",
                                "name": "prediction_id",
                                "schema": {
                                    "type": "string",
                                    "title": "Prediction ID"
                                },
                                "required": true
                            }
                        ],
                        "description": "Cancel a running prediction",
                        "operationId": "cancel_predictions__prediction_id__cancel_post"
                    }
                }
            },
            "openapi": "3.0.2",
            "components": {
                "schemas": {
                    "Input": {
                        "type": "object",
                        "title": "Input",
                        "required": [
                            "prompt"
                        ],
                        "properties": {
                            "seed": {
                                "type": "integer",
                                "title": "Seed",
                                "x-order": 8,
                                "description": "Random seed. Leave blank to randomize the seed"
                            },
                            "debug": {
                                "type": "boolean",
                                "title": "Debug",
                                "default": false,
                                "x-order": 9,
                                "description": "provide debugging output in logs"
                            },
                            "top_k": {
                                "type": "integer",
                                "title": "Top K",
                                "default": 50,
                                "minimum": 0.0,
                                "x-order": 6,
                                "description": "When decoding text, samples from the top k most likely tokens; lower to ignore less likely tokens"
                            },
                            "top_p": {
                                "type": "number",
                                "title": "Top P",
                                "default": 0.9,
                                "maximum": 1.0,
                                "minimum": 0.0,
                                "x-order": 5,
                                "description": "When decoding text, samples from the top p percentage of most likely tokens; lower to ignore less likely tokens"
                            },
                            "prompt": {
                                "type": "string",
                                "title": "Prompt",
                                "x-order": 0,
                                "description": "Prompt to send to the model."
                            },
                            "temperature": {
                                "type": "number",
                                "title": "Temperature",
                                "default": 0.75,
                                "maximum": 5.0,
                                "minimum": 0.01,
                                "x-order": 4,
                                "description": "Adjusts randomness of outputs, greater than 1 is random and 0 is deterministic, 0.75 is a good starting value."
                            },
                            "system_prompt": {
                                "type": "string",
                                "title": "System Prompt",
                                "default": "You are a helpful assistant.",
                                "x-order": 1,
                                "description": "System prompt to send to the model. This is prepended to the prompt and helps guide system behavior."
                            },
                            "max_new_tokens": {
                                "type": "integer",
                                "title": "Max New Tokens",
                                "default": 128,
                                "minimum": 1.0,
                                "x-order": 2,
                                "description": "Maximum number of tokens to generate. A word is generally 2-3 tokens"
                            },
                            "min_new_tokens": {
                                "type": "integer",
                                "title": "Min New Tokens",
                                "default": -1,
                                "minimum": -1.0,
                                "x-order": 3,
                                "description": "Minimum number of tokens to generate. To disable, set to -1. A word is generally 2-3 tokens."
                            },
                            "stop_sequences": {
                                "type": "string",
                                "title": "Stop Sequences",
                                "x-order": 7,
                                "description": "A comma-separated list of sequences to stop generation at. For example, '<end>,<stop>' will stop generation at the first instance of 'end' or '<stop>'."
                            },
                            "replicate_weights": {
                                "type": "string",
                                "title": "Replicate Weights",
                                "x-order": 10,
                                "description": "Path to fine-tuned weights produced by a Replicate fine-tune job."
                            }
                        }
                    },
                    "Output": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Output",
                        "x-cog-array-type": "iterator",
                        "x-cog-array-display": "concatenate"
                    },
                    "Status": {
                        "enum": [
                            "starting",
                            "processing",
                            "succeeded",
                            "canceled",
                            "failed"
                        ],
                        "type": "string",
                        "title": "Status",
                        "description": "An enumeration."
                    },
                    "WebhookEvent": {
                        "enum": [
                            "start",
                            "output",
                            "logs",
                            "completed"
                        ],
                        "type": "string",
                        "title": "WebhookEvent",
                        "description": "An enumeration."
                    },
                    "ValidationError": {
                        "type": "object",
                        "title": "ValidationError",
                        "required": [
                            "loc",
                            "msg",
                            "type"
                        ],
                        "properties": {
                            "loc": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        }
                                    ]
                                },
                                "title": "Location"
                            },
                            "msg": {
                                "type": "string",
                                "title": "Message"
                            },
                            "type": {
                                "type": "string",
                                "title": "Error Type"
                            }
                        }
                    },
                    "PredictionRequest": {
                        "type": "object",
                        "title": "PredictionRequest",
                        "properties": {
                            "id": {
                                "type": "string",
                                "title": "Id"
                            },
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "webhook": {
                                "type": "string",
                                "title": "Webhook",
                                "format": "uri",
                                "maxLength": 65536,
                                "minLength": 1
                            },
                            "created_at": {
                                "type": "string",
                                "title": "Created At",
                                "format": "date-time"
                            },
                            "output_file_prefix": {
                                "type": "string",
                                "title": "Output File Prefix"
                            },
                            "webhook_events_filter": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WebhookEvent"
                                },
                                "default": [
                                    "start",
                                    "output",
                                    "logs",
                                    "completed"
                                ]
                            }
                        }
                    },
                    "PredictionResponse": {
                        "type": "object",
                        "title": "PredictionResponse",
                        "properties": {
                            "id": {
                                "type": "string",
                                "title": "Id"
                            },
                            "logs": {
                                "type": "string",
                                "title": "Logs",
                                "default": ""
                            },
                            "error": {
                                "type": "string",
                                "title": "Error"
                            },
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "output": {
                                "$ref": "#/components/schemas/Output"
                            },
                            "status": {
                                "$ref": "#/components/schemas/Status"
                            },
                            "metrics": {
                                "type": "object",
                                "title": "Metrics"
                            },
                            "version": {
                                "type": "string",
                                "title": "Version"
                            },
                            "created_at": {
                                "type": "string",
                                "title": "Created At",
                                "format": "date-time"
                            },
                            "started_at": {
                                "type": "string",
                                "title": "Started At",
                                "format": "date-time"
                            },
                            "completed_at": {
                                "type": "string",
                                "title": "Completed At",
                                "format": "date-time"
                            }
                        }
                    },
                    "HTTPValidationError": {
                        "type": "object",
                        "title": "HTTPValidationError",
                        "properties": {
                            "detail": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ValidationError"
                                },
                                "title": "Detail"
                            }
                        }
                    }
                }
            }
        }
    }
}