{
    "url": "https://replicate.com/cuuupid/idm-vton",
    "owner": "cuuupid",
    "name": "idm-vton",
    "description": "Best-in-class clothing virtual try on in the wild (non-commercial use only)",
    "visibility": "public",
    "github_url": "https://github.com/yisol/IDM-VTON",
    "paper_url": "https://arxiv.org/abs/2403.05139",
    "license_url": "https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en",
    "run_count": 0,
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/e6753f2f-78a9-43af-8a2e-ef379d9d5f51/replicate-prediction-qh5eq80v2hrg.png",
    "default_example": {
        "id": "chz7vk2mt5rgg0cenfqaj2war8",
        "model": "cuuupid/idm-vton",
        "version": "e3893af4fb4bd5741752b35b395348c5f7a9ab5c4776264f5d38e41418081ed7",
        "status": "succeeded",
        "input": {
            "seed": 42,
            "steps": 30,
            "garm_img": "https://replicate.delivery/pbxt/KgwTlZyFx5aUU3gc5gMiKuD5nNPTgliMlLUWx160G4z99YjO/sweater.webp",
            "human_img": "https://replicate.delivery/pbxt/KgwTlhCMvDagRrcVzZJbuozNJ8esPqiNAIJS3eMgHrYuHmW4/KakaoTalk_Photo_2024-04-04-21-44-45.png",
            "garment_des": "cute pink top"
        },
        "output": "https://replicate.delivery/pbxt/Tfs5JETdzlURKyKeUOltKwch7udHf8e2xmNsftwid7ca2E6UC/output.jpg",
        "logs": "0%|          | 0/1 [00:00<?, ?it/s]\n100%|██████████| 1/1 [00:03<00:00,  3.51s/it]\n100%|██████████| 1/1 [00:03<00:00,  3.51s/it]\n  0%|          | 0/1 [00:00<?, ?it/s]\n100%|██████████| 1/1 [00:03<00:00,  3.50s/it]\n100%|██████████| 1/1 [00:03<00:00,  3.50s/it]\n  0%|          | 0/30 [00:00<?, ?it/s]\n  3%|▎         | 1/30 [00:00<00:06,  4.49it/s]\n  7%|▋         | 2/30 [00:00<00:06,  4.46it/s]\n 10%|█         | 3/30 [00:00<00:05,  4.50it/s]\n 13%|█▎        | 4/30 [00:00<00:05,  4.49it/s]\n 17%|█▋        | 5/30 [00:01<00:05,  4.51it/s]\n 20%|██        | 6/30 [00:01<00:05,  4.53it/s]\n 23%|██▎       | 7/30 [00:01<00:05,  4.53it/s]\n 27%|██▋       | 8/30 [00:01<00:04,  4.53it/s]\n 30%|███       | 9/30 [00:01<00:04,  4.52it/s]\n 33%|███▎      | 10/30 [00:02<00:04,  4.52it/s]\n 37%|███▋      | 11/30 [00:02<00:04,  4.51it/s]\n 40%|████      | 12/30 [00:02<00:04,  4.48it/s]\n 43%|████▎     | 13/30 [00:02<00:03,  4.48it/s]\n 47%|████▋     | 14/30 [00:03<00:03,  4.51it/s]\n 50%|█████     | 15/30 [00:03<00:03,  4.51it/s]\n 53%|█████▎    | 16/30 [00:03<00:03,  4.51it/s]\n 57%|█████▋    | 17/30 [00:03<00:02,  4.50it/s]\n 60%|██████    | 18/30 [00:03<00:02,  4.50it/s]\n 63%|██████▎   | 19/30 [00:04<00:02,  4.49it/s]\n 67%|██████▋   | 20/30 [00:04<00:02,  4.47it/s]\n 70%|███████   | 21/30 [00:04<00:02,  4.47it/s]\n 73%|███████▎  | 22/30 [00:04<00:01,  4.46it/s]\n 77%|███████▋  | 23/30 [00:05<00:01,  4.47it/s]\n 80%|████████  | 24/30 [00:05<00:01,  4.47it/s]\n 83%|████████▎ | 25/30 [00:05<00:01,  4.49it/s]\n 87%|████████▋ | 26/30 [00:05<00:00,  4.49it/s]\n 90%|█████████ | 27/30 [00:06<00:00,  4.49it/s]\n 93%|█████████▎| 28/30 [00:06<00:00,  4.50it/s]\n 97%|█████████▋| 29/30 [00:06<00:00,  4.50it/s]\n100%|██████████| 30/30 [00:06<00:00,  4.50it/s]\n100%|██████████| 30/30 [00:06<00:00,  4.50it/s]",
        "error": null,
        "metrics": {
            "predict_time": 16.590835,
            "total_time": 16.600048
        },
        "created_at": "2024-04-05T01:45:07.025000Z",
        "started_at": "2024-04-05T01:45:07.034213Z",
        "completed_at": "2024-04-05T01:45:23.625048Z",
        "urls": {
            "get": "https://api.replicate.com/v1/predictions/chz7vk2mt5rgg0cenfqaj2war8",
            "cancel": "https://api.replicate.com/v1/predictions/chz7vk2mt5rgg0cenfqaj2war8/cancel"
        }
    },
    "latest_version": {
        "id": "c871bb9b046607b680449ecbae55fd8c6d945e0a1948644bf2361b3d021d3ff4",
        "created_at": "2024-08-24T22:47:35.535214+00:00",
        "cog_version": "v0.10.0-alpha13+dev",
        "openapi_schema": {
            "info": {
                "title": "Cog",
                "version": "0.1.0"
            },
            "paths": {
                "/": {
                    "get": {
                        "summary": "Root",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Root  Get"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "operationId": "root__get"
                    }
                },
                "/ready": {
                    "get": {
                        "summary": "Ready",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Ready Ready Get"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "operationId": "ready_ready_get"
                    }
                },
                "/shutdown": {
                    "post": {
                        "summary": "Start Shutdown",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Start Shutdown Shutdown Post"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "operationId": "start_shutdown_shutdown_post"
                    }
                },
                "/predictions": {
                    "post": {
                        "summary": "Predict",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/PredictionResponse"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "parameters": [
                            {
                                "in": "header",
                                "name": "prefer",
                                "schema": {
                                    "type": "string",
                                    "title": "Prefer"
                                },
                                "required": false
                            }
                        ],
                        "description": "Run a single prediction on the model",
                        "operationId": "predict_predictions_post",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/PredictionRequest"
                                    }
                                }
                            }
                        }
                    }
                },
                "/health-check": {
                    "get": {
                        "summary": "Healthcheck",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Healthcheck Health Check Get"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "operationId": "healthcheck_health_check_get"
                    }
                },
                "/predictions/{prediction_id}": {
                    "put": {
                        "summary": "Predict Idempotent",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/PredictionResponse"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "parameters": [
                            {
                                "in": "path",
                                "name": "prediction_id",
                                "schema": {
                                    "type": "string",
                                    "title": "Prediction ID"
                                },
                                "required": true
                            },
                            {
                                "in": "header",
                                "name": "prefer",
                                "schema": {
                                    "type": "string",
                                    "title": "Prefer"
                                },
                                "required": false
                            }
                        ],
                        "description": "Run a single prediction on the model (idempotent creation).",
                        "operationId": "predict_idempotent_predictions__prediction_id__put",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/PredictionRequest"
                                            }
                                        ],
                                        "title": "Prediction Request"
                                    }
                                }
                            },
                            "required": true
                        }
                    }
                },
                "/predictions/{prediction_id}/cancel": {
                    "post": {
                        "summary": "Cancel",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "parameters": [
                            {
                                "in": "path",
                                "name": "prediction_id",
                                "schema": {
                                    "type": "string",
                                    "title": "Prediction ID"
                                },
                                "required": true
                            }
                        ],
                        "description": "Cancel a running prediction",
                        "operationId": "cancel_predictions__prediction_id__cancel_post"
                    }
                }
            },
            "openapi": "3.0.2",
            "components": {
                "schemas": {
                    "Input": {
                        "type": "object",
                        "title": "Input",
                        "required": [
                            "garm_img",
                            "human_img"
                        ],
                        "properties": {
                            "crop": {
                                "type": "boolean",
                                "title": "Crop",
                                "default": false,
                                "x-order": 5,
                                "description": "Use cropping? (check this if your image is not 3:4)"
                            },
                            "seed": {
                                "type": "integer",
                                "title": "Seed",
                                "default": 42,
                                "x-order": 9
                            },
                            "steps": {
                                "type": "integer",
                                "title": "Steps",
                                "default": 30,
                                "maximum": 40,
                                "minimum": 1,
                                "x-order": 8
                            },
                            "category": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/category"
                                    }
                                ],
                                "default": "upper_body",
                                "x-order": 4,
                                "description": "Category of garment"
                            },
                            "force_dc": {
                                "type": "boolean",
                                "title": "Force Dc",
                                "default": false,
                                "x-order": 6,
                                "description": "Use the DressCode version of IDM-VTON (this is default false, except if category=dresses)"
                            },
                            "garm_img": {
                                "type": "string",
                                "title": "Garm Img",
                                "format": "uri",
                                "x-order": 0,
                                "description": "Garment, should match the category, can be a product image or even a photo of someone"
                            },
                            "mask_img": {
                                "type": "string",
                                "title": "Mask Img",
                                "format": "uri",
                                "x-order": 3,
                                "description": "Mask image, optional (but faster)"
                            },
                            "human_img": {
                                "type": "string",
                                "title": "Human Img",
                                "format": "uri",
                                "x-order": 2,
                                "description": "Model, if this is not 3:4 check crop"
                            },
                            "mask_only": {
                                "type": "boolean",
                                "title": "Mask Only",
                                "default": false,
                                "x-order": 7,
                                "description": "Return only the mask"
                            },
                            "garment_des": {
                                "type": "string",
                                "title": "Garment Des",
                                "x-order": 1,
                                "description": "Description of garment e.g. Short Sleeve Round Neck T-shirt"
                            }
                        }
                    },
                    "Output": {
                        "type": "string",
                        "title": "Output",
                        "format": "uri"
                    },
                    "Status": {
                        "enum": [
                            "starting",
                            "processing",
                            "succeeded",
                            "canceled",
                            "failed"
                        ],
                        "type": "string",
                        "title": "Status",
                        "description": "An enumeration."
                    },
                    "category": {
                        "enum": [
                            "upper_body",
                            "lower_body",
                            "dresses"
                        ],
                        "type": "string",
                        "title": "category",
                        "description": "An enumeration."
                    },
                    "WebhookEvent": {
                        "enum": [
                            "start",
                            "output",
                            "logs",
                            "completed"
                        ],
                        "type": "string",
                        "title": "WebhookEvent",
                        "description": "An enumeration."
                    },
                    "ValidationError": {
                        "type": "object",
                        "title": "ValidationError",
                        "required": [
                            "loc",
                            "msg",
                            "type"
                        ],
                        "properties": {
                            "loc": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        }
                                    ]
                                },
                                "title": "Location"
                            },
                            "msg": {
                                "type": "string",
                                "title": "Message"
                            },
                            "type": {
                                "type": "string",
                                "title": "Error Type"
                            }
                        }
                    },
                    "PredictionRequest": {
                        "type": "object",
                        "title": "PredictionRequest",
                        "properties": {
                            "id": {
                                "type": "string",
                                "title": "Id"
                            },
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "webhook": {
                                "type": "string",
                                "title": "Webhook",
                                "format": "uri",
                                "maxLength": 65536,
                                "minLength": 1
                            },
                            "created_at": {
                                "type": "string",
                                "title": "Created At",
                                "format": "date-time"
                            },
                            "output_file_prefix": {
                                "type": "string",
                                "title": "Output File Prefix"
                            },
                            "webhook_events_filter": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WebhookEvent"
                                },
                                "default": [
                                    "start",
                                    "output",
                                    "logs",
                                    "completed"
                                ]
                            }
                        }
                    },
                    "PredictionResponse": {
                        "type": "object",
                        "title": "PredictionResponse",
                        "properties": {
                            "id": {
                                "type": "string",
                                "title": "Id"
                            },
                            "logs": {
                                "type": "string",
                                "title": "Logs",
                                "default": ""
                            },
                            "error": {
                                "type": "string",
                                "title": "Error"
                            },
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "output": {
                                "$ref": "#/components/schemas/Output"
                            },
                            "status": {
                                "$ref": "#/components/schemas/Status"
                            },
                            "metrics": {
                                "type": "object",
                                "title": "Metrics"
                            },
                            "version": {
                                "type": "string",
                                "title": "Version"
                            },
                            "created_at": {
                                "type": "string",
                                "title": "Created At",
                                "format": "date-time"
                            },
                            "started_at": {
                                "type": "string",
                                "title": "Started At",
                                "format": "date-time"
                            },
                            "completed_at": {
                                "type": "string",
                                "title": "Completed At",
                                "format": "date-time"
                            }
                        }
                    },
                    "HTTPValidationError": {
                        "type": "object",
                        "title": "HTTPValidationError",
                        "properties": {
                            "detail": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ValidationError"
                                },
                                "title": "Detail"
                            }
                        }
                    }
                }
            }
        }
    }
}