{
    "url": "https://replicate.com/batouresearch/magic-image-refiner",
    "owner": "batouresearch",
    "name": "magic-image-refiner",
    "description": "A better alternative to SDXL refiners, providing a lot of quality and detail. Can also be used for inpainting or upscaling.",
    "visibility": "public",
    "github_url": "https://github.com/BatouResearch/magic-image-refiner",
    "paper_url": null,
    "license_url": null,
    "run_count": 0,
    "cover_image_url": "https://replicate.delivery/pbxt/H3ZmqoAgsBonKFilPafiEsvYsc2FnjD8EW3vMt6KpkYfd0ISA/out-0.png",
    "default_example": {
        "id": "zyaw3gdbhd46blbbctgzsiiice",
        "model": "batouresearch/magic-image-refiner",
        "version": "3064c8a3a831c0048031669a4a3bf3a7fe454a4d995897fc33e66ec5506ea74a",
        "status": "succeeded",
        "input": {
            "hdr": 0,
            "image": "https://replicate.delivery/pbxt/KA9yP9n3ZX5A5mkoPz3gsPzKTH1NA7LqVkQRTg7Sov46lOfo/0_1.webp",
            "steps": 20,
            "prompt": "UHD 4k vogue, a woman resting in a magic pool, face above the surface of the water, red freckles",
            "scheduler": "DDIM",
            "creativity": 0.25,
            "guess_mode": false,
            "resolution": "original",
            "resemblance": 0.75,
            "guidance_scale": 7,
            "negative_prompt": "teeth, tooth, open mouth, longbody, lowres, bad anatomy, bad hands, missing fingers, extra digit, fewer digits, cropped, worst quality, low quality, mutant"
        },
        "output": [
            "https://replicate.delivery/pbxt/H3ZmqoAgsBonKFilPafiEsvYsc2FnjD8EW3vMt6KpkYfd0ISA/out-0.png"
        ],
        "logs": "Using seed: 17908\n  0%|          | 0/5 [00:00<?, ?it/s]\n 20%|██        | 1/5 [00:00<00:01,  3.82it/s]\n 40%|████      | 2/5 [00:00<00:00,  3.81it/s]\n 60%|██████    | 3/5 [00:00<00:00,  3.81it/s]\n 80%|████████  | 4/5 [00:01<00:00,  3.81it/s]\n100%|██████████| 5/5 [00:01<00:00,  3.81it/s]\n100%|██████████| 5/5 [00:01<00:00,  3.81it/s]",
        "error": null,
        "metrics": {
            "predict_time": 3.42507,
            "total_time": 3.454188
        },
        "created_at": "2024-01-03T17:12:27.719471Z",
        "started_at": "2024-01-03T17:12:27.748589Z",
        "completed_at": "2024-01-03T17:12:31.173659Z",
        "urls": {
            "get": "https://api.replicate.com/v1/predictions/zyaw3gdbhd46blbbctgzsiiice",
            "cancel": "https://api.replicate.com/v1/predictions/zyaw3gdbhd46blbbctgzsiiice/cancel"
        }
    },
    "latest_version": {
        "id": "507ddf6f977a7e30e46c0daefd30de7d563c72322f9e4cf7cbac52ef0f667b13",
        "created_at": "2024-01-31T14:16:36.395622+00:00",
        "cog_version": "0.8.6",
        "openapi_schema": {
            "info": {
                "title": "Cog",
                "version": "0.1.0"
            },
            "paths": {
                "/": {
                    "get": {
                        "summary": "Root",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Root  Get"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "operationId": "root__get"
                    }
                },
                "/shutdown": {
                    "post": {
                        "summary": "Start Shutdown",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Start Shutdown Shutdown Post"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "operationId": "start_shutdown_shutdown_post"
                    }
                },
                "/predictions": {
                    "post": {
                        "summary": "Predict",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/PredictionResponse"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "parameters": [
                            {
                                "in": "header",
                                "name": "prefer",
                                "schema": {
                                    "type": "string",
                                    "title": "Prefer"
                                },
                                "required": false
                            }
                        ],
                        "description": "Run a single prediction on the model",
                        "operationId": "predict_predictions_post",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/PredictionRequest"
                                    }
                                }
                            }
                        }
                    }
                },
                "/health-check": {
                    "get": {
                        "summary": "Healthcheck",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Healthcheck Health Check Get"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "operationId": "healthcheck_health_check_get"
                    }
                },
                "/predictions/{prediction_id}": {
                    "put": {
                        "summary": "Predict Idempotent",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/PredictionResponse"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "parameters": [
                            {
                                "in": "path",
                                "name": "prediction_id",
                                "schema": {
                                    "type": "string",
                                    "title": "Prediction ID"
                                },
                                "required": true
                            },
                            {
                                "in": "header",
                                "name": "prefer",
                                "schema": {
                                    "type": "string",
                                    "title": "Prefer"
                                },
                                "required": false
                            }
                        ],
                        "description": "Run a single prediction on the model (idempotent creation).",
                        "operationId": "predict_idempotent_predictions__prediction_id__put",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/PredictionRequest"
                                            }
                                        ],
                                        "title": "Prediction Request"
                                    }
                                }
                            },
                            "required": true
                        }
                    }
                },
                "/predictions/{prediction_id}/cancel": {
                    "post": {
                        "summary": "Cancel",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "parameters": [
                            {
                                "in": "path",
                                "name": "prediction_id",
                                "schema": {
                                    "type": "string",
                                    "title": "Prediction ID"
                                },
                                "required": true
                            }
                        ],
                        "description": "Cancel a running prediction",
                        "operationId": "cancel_predictions__prediction_id__cancel_post"
                    }
                }
            },
            "openapi": "3.0.2",
            "components": {
                "schemas": {
                    "Input": {
                        "type": "object",
                        "title": "Input",
                        "properties": {
                            "hdr": {
                                "type": "number",
                                "title": "Hdr",
                                "default": 0,
                                "maximum": 1,
                                "minimum": 0,
                                "x-order": 6,
                                "description": "HDR improvement over the original image"
                            },
                            "mask": {
                                "type": "string",
                                "title": "Mask",
                                "format": "uri",
                                "x-order": 2,
                                "description": "When provided, refines some section of the image. Must be the same size as the image"
                            },
                            "seed": {
                                "type": "integer",
                                "title": "Seed",
                                "x-order": 10,
                                "description": "Seed"
                            },
                            "image": {
                                "type": "string",
                                "title": "Image",
                                "format": "uri",
                                "x-order": 1,
                                "description": "Image to refine"
                            },
                            "steps": {
                                "type": "integer",
                                "title": "Steps",
                                "default": 20,
                                "x-order": 8,
                                "description": "Steps"
                            },
                            "prompt": {
                                "type": "string",
                                "title": "Prompt",
                                "x-order": 0,
                                "description": "Prompt for the model"
                            },
                            "scheduler": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/scheduler"
                                    }
                                ],
                                "default": "DDIM",
                                "x-order": 7,
                                "description": "Choose a scheduler."
                            },
                            "creativity": {
                                "type": "number",
                                "title": "Creativity",
                                "default": 0.25,
                                "maximum": 1,
                                "minimum": 0,
                                "x-order": 5,
                                "description": "Denoising strength. 1 means total destruction of the original image"
                            },
                            "guess_mode": {
                                "type": "boolean",
                                "title": "Guess Mode",
                                "default": false,
                                "x-order": 12,
                                "description": "In this mode, the ControlNet encoder will try best to recognize the content of the input image even if you remove all prompts. The `guidance_scale` between 3.0 and 5.0 is recommended."
                            },
                            "resolution": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/resolution"
                                    }
                                ],
                                "default": "original",
                                "x-order": 3,
                                "description": "Image resolution"
                            },
                            "resemblance": {
                                "type": "number",
                                "title": "Resemblance",
                                "default": 0.75,
                                "maximum": 1,
                                "minimum": 0,
                                "x-order": 4,
                                "description": "Conditioning scale for controlnet"
                            },
                            "guidance_scale": {
                                "type": "number",
                                "title": "Guidance Scale",
                                "default": 7,
                                "maximum": 30,
                                "minimum": 0.1,
                                "x-order": 9,
                                "description": "Scale for classifier-free guidance"
                            },
                            "negative_prompt": {
                                "type": "string",
                                "title": "Negative Prompt",
                                "default": "teeth, tooth, open mouth, longbody, lowres, bad anatomy, bad hands, missing fingers, extra digit, fewer digits, cropped, worst quality, low quality, mutant",
                                "x-order": 11,
                                "description": "Negative prompt"
                            }
                        }
                    },
                    "Output": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "title": "Output"
                    },
                    "Status": {
                        "enum": [
                            "starting",
                            "processing",
                            "succeeded",
                            "canceled",
                            "failed"
                        ],
                        "type": "string",
                        "title": "Status",
                        "description": "An enumeration."
                    },
                    "scheduler": {
                        "enum": [
                            "DDIM",
                            "DPMSolverMultistep",
                            "K_EULER_ANCESTRAL",
                            "K_EULER"
                        ],
                        "type": "string",
                        "title": "scheduler",
                        "description": "An enumeration."
                    },
                    "resolution": {
                        "enum": [
                            "original",
                            "1024",
                            "2048"
                        ],
                        "type": "string",
                        "title": "resolution",
                        "description": "An enumeration."
                    },
                    "WebhookEvent": {
                        "enum": [
                            "start",
                            "output",
                            "logs",
                            "completed"
                        ],
                        "type": "string",
                        "title": "WebhookEvent",
                        "description": "An enumeration."
                    },
                    "ValidationError": {
                        "type": "object",
                        "title": "ValidationError",
                        "required": [
                            "loc",
                            "msg",
                            "type"
                        ],
                        "properties": {
                            "loc": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        }
                                    ]
                                },
                                "title": "Location"
                            },
                            "msg": {
                                "type": "string",
                                "title": "Message"
                            },
                            "type": {
                                "type": "string",
                                "title": "Error Type"
                            }
                        }
                    },
                    "PredictionRequest": {
                        "type": "object",
                        "title": "PredictionRequest",
                        "properties": {
                            "id": {
                                "type": "string",
                                "title": "Id"
                            },
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "webhook": {
                                "type": "string",
                                "title": "Webhook",
                                "format": "uri",
                                "maxLength": 65536,
                                "minLength": 1
                            },
                            "created_at": {
                                "type": "string",
                                "title": "Created At",
                                "format": "date-time"
                            },
                            "output_file_prefix": {
                                "type": "string",
                                "title": "Output File Prefix"
                            },
                            "webhook_events_filter": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WebhookEvent"
                                },
                                "default": [
                                    "start",
                                    "output",
                                    "logs",
                                    "completed"
                                ]
                            }
                        }
                    },
                    "PredictionResponse": {
                        "type": "object",
                        "title": "PredictionResponse",
                        "properties": {
                            "id": {
                                "type": "string",
                                "title": "Id"
                            },
                            "logs": {
                                "type": "string",
                                "title": "Logs",
                                "default": ""
                            },
                            "error": {
                                "type": "string",
                                "title": "Error"
                            },
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "output": {
                                "$ref": "#/components/schemas/Output"
                            },
                            "status": {
                                "$ref": "#/components/schemas/Status"
                            },
                            "metrics": {
                                "type": "object",
                                "title": "Metrics"
                            },
                            "version": {
                                "type": "string",
                                "title": "Version"
                            },
                            "created_at": {
                                "type": "string",
                                "title": "Created At",
                                "format": "date-time"
                            },
                            "started_at": {
                                "type": "string",
                                "title": "Started At",
                                "format": "date-time"
                            },
                            "completed_at": {
                                "type": "string",
                                "title": "Completed At",
                                "format": "date-time"
                            }
                        }
                    },
                    "HTTPValidationError": {
                        "type": "object",
                        "title": "HTTPValidationError",
                        "properties": {
                            "detail": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ValidationError"
                                },
                                "title": "Detail"
                            }
                        }
                    }
                }
            }
        }
    }
}