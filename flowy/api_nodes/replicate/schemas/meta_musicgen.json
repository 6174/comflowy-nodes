{
    "url": "https://replicate.com/meta/musicgen",
    "owner": "meta",
    "name": "musicgen",
    "description": "Generate music from a prompt or melody",
    "visibility": "public",
    "github_url": "https://github.com/replicate/cog-musicgen",
    "paper_url": "https://arxiv.org/abs/2306.05284",
    "license_url": "https://github.com/facebookresearch/audiocraft/blob/main/LICENSE_weights",
    "run_count": 0,
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/a921a8b3-3e9e-48ef-995c-29143ea11bec/musicgen.jpeg",
    "default_example": {
        "id": "soub5pjbe5g5u62q536t73ltku",
        "model": "meta/musicgen",
        "version": "671ac645ce5e552cc63a54a2bbff63fcf798043055d2dac5fc9e36a837eedcfb",
        "status": "succeeded",
        "input": {
            "top_k": 250,
            "top_p": 0,
            "prompt": "Edo25 major g melodies that sound triumphant and cinematic. Leading up to a crescendo that resolves in a 9th harmonic",
            "duration": 8,
            "temperature": 1,
            "continuation": false,
            "model_version": "stereo-large",
            "output_format": "mp3",
            "continuation_start": 0,
            "multi_band_diffusion": false,
            "normalization_strategy": "peak",
            "classifier_free_guidance": 3
        },
        "output": "https://replicate.delivery/pbxt/OeLYIQiltdzMaCex1shlEFy6wuvnvExi0kdjF0gYKEzG5wkSA/out.mp3",
        "logs": "Loading model stereo-large...\nDownloading models--facebook--musicgen-stereo-large to models\nDownloaded models--facebook--musicgen-stereo-large in 9.88s\nModel stereo-large loaded successfully.\nUsing seed 187926229\n1 /    400\n2 /    400\n3 /    400\n4 /    400\n5 /    400\n6 /    400\n7 /    400\n8 /    400\n9 /    400\n10 /    400\n11 /    400\n12 /    400\n13 /    400\n14 /    400\n15 /    400\n16 /    400\n17 /    400\n18 /    400\n19 /    400\n20 /    400\n21 /    400\n22 /    400\n23 /    400\n24 /    400\n25 /    400\n26 /    400\n27 /    400\n28 /    400\n29 /    400\n30 /    400\n31 /    400\n32 /    400\n33 /    400\n34 /    400\n35 /    400\n36 /    400\n37 /    400\n38 /    400\n39 /    400\n40 /    400\n41 /    400\n42 /    400\n43 /    400\n44 /    400\n45 /    400\n46 /    400\n47 /    400\n48 /    400\n49 /    400\n50 /    400\n51 /    400\n52 /    400\n53 /    400\n54 /    400\n55 /    400\n56 /    400\n57 /    400\n58 /    400\n59 /    400\n60 /    400\n61 /    400\n62 /    400\n63 /    400\n64 /    400\n65 /    400\n66 /    400\n67 /    400\n68 /    400\n69 /    400\n70 /    400\n71 /    400\n72 /    400\n73 /    400\n74 /    400\n75 /    400\n76 /    400\n77 /    400\n78 /    400\n79 /    400\n80 /    400\n81 /    400\n82 /    400\n83 /    400\n    84 /    400\n85 /    400\n86 /    400\n87 /    400\n88 /    400\n89 /    400\n90 /    400\n91 /    400\n92 /    400\n93 /    400\n94 /    400\n95 /    400\n96 /    400\n97 /    400\n98 /    400\n99 /    400\n100 /    400\n101 /    400\n102 /    400\n103 /    400\n104 /    400\n105 /    400\n106 /    400\n107 /    400\n108 /    400\n109 /    400\n110 /    400\n111 /    400\n112 /    400\n113 /    400\n114 /    400\n115 /    400\n116 /    400\n117 /    400\n118 /    400\n119 /    400\n120 /    400\n121 /    400\n122 /    400\n123 /    400\n124 /    400\n125 /    400\n126 /    400\n127 /    400\n128 /    400\n129 /    400\n130 /    400\n131 /    400\n132 /    400\n133 /    400\n134 /    400\n135 /    400\n136 /    400\n137 /    400\n138 /    400\n139 /    400\n140 /    400\n141 /    400\n142 /    400\n143 /    400\n144 /    400\n145 /    400\n146 /    400\n147 /    400\n148 /    400\n149 /    400\n150 /    400\n151 /    400\n152 /    400\n153 /    400\n154 /    400\n155 /    400\n156 /    400\n157 /    400\n158 /    400\n159 /    400\n160 /    400\n161 /    400\n162 /    400\n163 /    400\n164 /    400\n165 /    400\n166 /    400\n167 /    400\n168 /    400\n169 /    400\n170 /    400\n171 /    400\n172 /    400\n173 /    400\n174 /    400\n175 /    400\n176 /    400\n177 /    400\n178 /    400\n179 /    400\n180 /    400\n181 /    400\n182 /    400\n183 /    400\n184 /    400\n185 /    400\n186 /    400\n187 /    400\n188 /    400\n189 /    400\n190 /    400\n191 /    400\n192 /    400\n193 /    400\n194 /    400\n195 /    400\n196 /    400\n197 /    400\n198 /    400\n199 /    400\n200 /    400\n201 /    400\n202 /    400\n203 /    400\n204 /    400\n205 /    400\n206 /    400\n207 /    400\n208 /    400\n209 /    400\n210 /    400\n211 /    400\n212 /    400\n213 /    400\n214 /    400\n215 /    400\n216 /    400\n217 /    400\n218 /    400\n219 /    400\n220 /    400\n221 /    400\n222 /    400\n223 /    400\n224 /    400\n225 /    400\n226 /    400\n227 /    400\n228 /    400\n229 /    400\n230 /    400\n231 /    400\n232 /    400\n233 /    400\n234 /    400\n235 /    400\n236 /    400\n237 /    400\n238 /    400\n239 /    400\n240 /    400\n241 /    400\n242 /    400\n243 /    400\n244 /    400\n245 /    400\n246 /    400\n247 /    400\n248 /    400\n249 /    400\n250 /    400\n251 /    400\n252 /    400\n253 /    400\n254 /    400\n255 /    400\n256 /    400\n257 /    400\n258 /    400\n259 /    400\n260 /    400\n261 /    400\n262 /    400\n263 /    400\n264 /    400\n265 /    400\n266 /    400\n267 /    400\n268 /    400\n269 /    400\n270 /    400\n271 /    400\n272 /    400\n273 /    400\n274 /    400\n275 /    400\n276 /    400\n277 /    400\n278 /    400\n279 /    400\n280 /    400\n281 /    400\n282 /    400\n283 /    400\n284 /    400\n285 /    400\n286 /    400\n287 /    400\n288 /    400\n289 /    400\n290 /    400\n291 /    400\n292 /    400\n293 /    400\n294 /    400\n295 /    400\n296 /    400\n297 /    400\n298 /    400\n299 /    400\n300 /    400\n301 /    400\n302 /    400\n303 /    400\n304 /    400\n305 /    400\n306 /    400\n307 /    400\n308 /    400\n309 /    400\n310 /    400\n311 /    400\n312 /    400\n313 /    400\n314 /    400\n315 /    400\n316 /    400\n317 /    400\n318 /    400\n319 /    400\n320 /    400\n321 /    400\n322 /    400\n323 /    400\n324 /    400\n325 /    400\n326 /    400\n327 /    400\n328 /    400\n329 /    400\n330 /    400\n331 /    400\n332 /    400\n333 /    400\n334 /    400\n335 /    400\n336 /    400\n337 /    400\n338 /    400\n339 /    400\n340 /    400\n341 /    400\n342 /    400\n343 /    400\n344 /    400\n345 /    400\n346 /    400\n347 /    400\n348 /    400\n349 /    400\n350 /    400\n351 /    400\n352 /    400\n353 /    400\n354 /    400\n355 /    400\n356 /    400\n357 /    400\n358 /    400\n359 /    400\n360 /    400\n361 /    400\n362 /    400\n363 /    400\n364 /    400\n365 /    400\n366 /    400\n367 /    400\n368 /    400\n369 /    400\n370 /    400\n371 /    400\n372 /    400\n373 /    400\n374 /    400\n375 /    400\n376 /    400\n377 /    400\n378 /    400\n379 /    400\n380 /    400\n381 /    400\n382 /    400\n383 /    400\n384 /    400\n385 /    400\n386 /    400\n387 /    400\n388 /    400\n389 /    400\n390 /    400\n391 /    400\n392 /    400\n393 /    400\n394 /    400\n395 /    400\n396 /    400\n397 /    400\n398 /    400\n399 /    400\n400 /    400\n401 /    400\n402 /    400\n403 /    400\nffmpeg version 4.4.2-0ubuntu0.22.04.1 Copyright (c) 2000-2021 the FFmpeg developers\nbuilt with gcc 11 (Ubuntu 11.2.0-19ubuntu1)\nconfiguration: --prefix=/usr --extra-version=0ubuntu0.22.04.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --arch=amd64 --enable-gpl --disable-stripping --enable-gnutls --enable-ladspa --enable-libaom --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libcodec2 --enable-libdav1d --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libjack --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librabbitmq --enable-librubberband --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libsrt --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvidstab --enable-libvorbis --enable-libvpx --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzimg --enable-libzmq --enable-libzvbi --enable-lv2 --enable-omx --enable-openal --enable-opencl --enable-opengl --enable-sdl2 --enable-pocketsphinx --enable-librsvg --enable-libmfx --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libx264 --enable-shared\nlibavutil      56. 70.100 / 56. 70.100\nlibavcodec     58.134.100 / 58.134.100\nlibavformat    58. 76.100 / 58. 76.100\nlibavdevice    58. 13.100 / 58. 13.100\nlibavfilter     7.110.100 /  7.110.100\nlibswscale      5.  9.100 /  5.  9.100\nlibswresample   3.  9.100 /  3.  9.100\nlibpostproc    55.  9.100 / 55.  9.100\nGuessed Channel Layout for Input Stream #0.0 : stereo\nInput #0, wav, from 'out.wav':\nMetadata:\nencoder         : Lavf58.76.100\nDuration: 00:00:08.00, bitrate: 1024 kb/s\nStream #0:0: Audio: pcm_s16le ([1][0][0][0] / 0x0001), 32000 Hz, stereo, s16, 1024 kb/s\nStream mapping:\nStream #0:0 -> #0:0 (pcm_s16le (native) -> mp3 (libmp3lame))\nPress [q] to stop, [?] for help\nOutput #0, mp3, to 'out.mp3':\nMetadata:\nTSSE            : Lavf58.76.100\nStream #0:0: Audio: mp3, 32000 Hz, stereo, s16p\nMetadata:\nencoder         : Lavc58.134.100 libmp3lame\nsize=       0kB time=00:00:00.00 bitrate=N/A speed=N/A\nsize=      95kB time=00:00:07.99 bitrate=  97.1kbits/s speed=45.6x\nvideo:0kB audio:94kB subtitle:0kB other streams:0kB global headers:0kB muxing overhead: 0.269717%",
        "error": null,
        "metrics": {
            "predict_time": 66.371701,
            "total_time": 66.463286
        },
        "created_at": "2024-03-28T12:01:08.688755Z",
        "started_at": "2024-03-28T12:01:08.780340Z",
        "completed_at": "2024-03-28T12:02:15.152041Z",
        "urls": {
            "get": "https://api.replicate.com/v1/predictions/soub5pjbe5g5u62q536t73ltku",
            "cancel": "https://api.replicate.com/v1/predictions/soub5pjbe5g5u62q536t73ltku/cancel"
        }
    },
    "latest_version": {
        "id": "671ac645ce5e552cc63a54a2bbff63fcf798043055d2dac5fc9e36a837eedcfb",
        "created_at": "2024-03-28T11:07:13.003999+00:00",
        "cog_version": "0.8.6",
        "openapi_schema": {
            "info": {
                "title": "Cog",
                "version": "0.1.0"
            },
            "paths": {
                "/": {
                    "get": {
                        "summary": "Root",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Root  Get"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "operationId": "root__get"
                    }
                },
                "/shutdown": {
                    "post": {
                        "summary": "Start Shutdown",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Start Shutdown Shutdown Post"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "operationId": "start_shutdown_shutdown_post"
                    }
                },
                "/predictions": {
                    "post": {
                        "summary": "Predict",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/PredictionResponse"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "parameters": [
                            {
                                "in": "header",
                                "name": "prefer",
                                "schema": {
                                    "type": "string",
                                    "title": "Prefer"
                                },
                                "required": false
                            }
                        ],
                        "description": "Run a single prediction on the model",
                        "operationId": "predict_predictions_post",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/PredictionRequest"
                                    }
                                }
                            }
                        }
                    }
                },
                "/health-check": {
                    "get": {
                        "summary": "Healthcheck",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Healthcheck Health Check Get"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "operationId": "healthcheck_health_check_get"
                    }
                },
                "/predictions/{prediction_id}": {
                    "put": {
                        "summary": "Predict Idempotent",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/PredictionResponse"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "parameters": [
                            {
                                "in": "path",
                                "name": "prediction_id",
                                "schema": {
                                    "type": "string",
                                    "title": "Prediction ID"
                                },
                                "required": true
                            },
                            {
                                "in": "header",
                                "name": "prefer",
                                "schema": {
                                    "type": "string",
                                    "title": "Prefer"
                                },
                                "required": false
                            }
                        ],
                        "description": "Run a single prediction on the model (idempotent creation).",
                        "operationId": "predict_idempotent_predictions__prediction_id__put",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/PredictionRequest"
                                            }
                                        ],
                                        "title": "Prediction Request"
                                    }
                                }
                            },
                            "required": true
                        }
                    }
                },
                "/predictions/{prediction_id}/cancel": {
                    "post": {
                        "summary": "Cancel",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "parameters": [
                            {
                                "in": "path",
                                "name": "prediction_id",
                                "schema": {
                                    "type": "string",
                                    "title": "Prediction ID"
                                },
                                "required": true
                            }
                        ],
                        "description": "Cancel a running prediction",
                        "operationId": "cancel_predictions__prediction_id__cancel_post"
                    }
                }
            },
            "openapi": "3.0.2",
            "components": {
                "schemas": {
                    "Input": {
                        "type": "object",
                        "title": "Input",
                        "properties": {
                            "seed": {
                                "type": "integer",
                                "title": "Seed",
                                "x-order": 14,
                                "description": "Seed for random number generator. If None or -1, a random seed will be used."
                            },
                            "top_k": {
                                "type": "integer",
                                "title": "Top K",
                                "default": 250,
                                "x-order": 9,
                                "description": "Reduces sampling to the k most likely tokens."
                            },
                            "top_p": {
                                "type": "number",
                                "title": "Top P",
                                "default": 0,
                                "x-order": 10,
                                "description": "Reduces sampling to tokens with cumulative probability of p. When set to  `0` (default), top_k sampling is used."
                            },
                            "prompt": {
                                "type": "string",
                                "title": "Prompt",
                                "x-order": 1,
                                "description": "A description of the music you want to generate."
                            },
                            "duration": {
                                "type": "integer",
                                "title": "Duration",
                                "default": 8,
                                "x-order": 3,
                                "description": "Duration of the generated audio in seconds."
                            },
                            "input_audio": {
                                "type": "string",
                                "title": "Input Audio",
                                "format": "uri",
                                "x-order": 2,
                                "description": "An audio file that will influence the generated music. If `continuation` is `True`, the generated music will be a continuation of the audio file. Otherwise, the generated music will mimic the audio file's melody."
                            },
                            "temperature": {
                                "type": "number",
                                "title": "Temperature",
                                "default": 1,
                                "x-order": 11,
                                "description": "Controls the 'conservativeness' of the sampling process. Higher temperature means more diversity."
                            },
                            "continuation": {
                                "type": "boolean",
                                "title": "Continuation",
                                "default": false,
                                "x-order": 4,
                                "description": "If `True`, generated music will continue from `input_audio`. Otherwise, generated music will mimic `input_audio`'s melody."
                            },
                            "model_version": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/model_version"
                                    }
                                ],
                                "default": "stereo-melody-large",
                                "x-order": 0,
                                "description": "Model to use for generation"
                            },
                            "output_format": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/output_format"
                                    }
                                ],
                                "default": "wav",
                                "x-order": 13,
                                "description": "Output format for generated audio."
                            },
                            "continuation_end": {
                                "type": "integer",
                                "title": "Continuation End",
                                "minimum": 0,
                                "x-order": 6,
                                "description": "End time of the audio file to use for continuation. If -1 or None, will default to the end of the audio clip."
                            },
                            "continuation_start": {
                                "type": "integer",
                                "title": "Continuation Start",
                                "default": 0,
                                "minimum": 0,
                                "x-order": 5,
                                "description": "Start time of the audio file to use for continuation."
                            },
                            "multi_band_diffusion": {
                                "type": "boolean",
                                "title": "Multi Band Diffusion",
                                "default": false,
                                "x-order": 7,
                                "description": "If `True`, the EnCodec tokens will be decoded with MultiBand Diffusion. Only works with non-stereo models."
                            },
                            "normalization_strategy": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/normalization_strategy"
                                    }
                                ],
                                "default": "loudness",
                                "x-order": 8,
                                "description": "Strategy for normalizing audio."
                            },
                            "classifier_free_guidance": {
                                "type": "integer",
                                "title": "Classifier Free Guidance",
                                "default": 3,
                                "x-order": 12,
                                "description": "Increases the influence of inputs on the output. Higher values produce lower-varience outputs that adhere more closely to inputs."
                            }
                        }
                    },
                    "Output": {
                        "type": "string",
                        "title": "Output",
                        "format": "uri"
                    },
                    "Status": {
                        "enum": [
                            "starting",
                            "processing",
                            "succeeded",
                            "canceled",
                            "failed"
                        ],
                        "type": "string",
                        "title": "Status",
                        "description": "An enumeration."
                    },
                    "WebhookEvent": {
                        "enum": [
                            "start",
                            "output",
                            "logs",
                            "completed"
                        ],
                        "type": "string",
                        "title": "WebhookEvent",
                        "description": "An enumeration."
                    },
                    "model_version": {
                        "enum": [
                            "stereo-melody-large",
                            "stereo-large",
                            "melody-large",
                            "large"
                        ],
                        "type": "string",
                        "title": "model_version",
                        "description": "An enumeration."
                    },
                    "output_format": {
                        "enum": [
                            "wav",
                            "mp3"
                        ],
                        "type": "string",
                        "title": "output_format",
                        "description": "An enumeration."
                    },
                    "ValidationError": {
                        "type": "object",
                        "title": "ValidationError",
                        "required": [
                            "loc",
                            "msg",
                            "type"
                        ],
                        "properties": {
                            "loc": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        }
                                    ]
                                },
                                "title": "Location"
                            },
                            "msg": {
                                "type": "string",
                                "title": "Message"
                            },
                            "type": {
                                "type": "string",
                                "title": "Error Type"
                            }
                        }
                    },
                    "PredictionRequest": {
                        "type": "object",
                        "title": "PredictionRequest",
                        "properties": {
                            "id": {
                                "type": "string",
                                "title": "Id"
                            },
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "webhook": {
                                "type": "string",
                                "title": "Webhook",
                                "format": "uri",
                                "maxLength": 65536,
                                "minLength": 1
                            },
                            "created_at": {
                                "type": "string",
                                "title": "Created At",
                                "format": "date-time"
                            },
                            "output_file_prefix": {
                                "type": "string",
                                "title": "Output File Prefix"
                            },
                            "webhook_events_filter": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WebhookEvent"
                                },
                                "default": [
                                    "start",
                                    "output",
                                    "logs",
                                    "completed"
                                ]
                            }
                        }
                    },
                    "PredictionResponse": {
                        "type": "object",
                        "title": "PredictionResponse",
                        "properties": {
                            "id": {
                                "type": "string",
                                "title": "Id"
                            },
                            "logs": {
                                "type": "string",
                                "title": "Logs",
                                "default": ""
                            },
                            "error": {
                                "type": "string",
                                "title": "Error"
                            },
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "output": {
                                "$ref": "#/components/schemas/Output"
                            },
                            "status": {
                                "$ref": "#/components/schemas/Status"
                            },
                            "metrics": {
                                "type": "object",
                                "title": "Metrics"
                            },
                            "version": {
                                "type": "string",
                                "title": "Version"
                            },
                            "created_at": {
                                "type": "string",
                                "title": "Created At",
                                "format": "date-time"
                            },
                            "started_at": {
                                "type": "string",
                                "title": "Started At",
                                "format": "date-time"
                            },
                            "completed_at": {
                                "type": "string",
                                "title": "Completed At",
                                "format": "date-time"
                            }
                        }
                    },
                    "HTTPValidationError": {
                        "type": "object",
                        "title": "HTTPValidationError",
                        "properties": {
                            "detail": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ValidationError"
                                },
                                "title": "Detail"
                            }
                        }
                    },
                    "normalization_strategy": {
                        "enum": [
                            "loudness",
                            "clip",
                            "peak",
                            "rms"
                        ],
                        "type": "string",
                        "title": "normalization_strategy",
                        "description": "An enumeration."
                    }
                }
            }
        }
    }
}