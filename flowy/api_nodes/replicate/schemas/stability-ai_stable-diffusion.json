{
    "url": "https://replicate.com/stability-ai/stable-diffusion",
    "owner": "stability-ai",
    "name": "stable-diffusion",
    "description": "A latent text-to-image diffusion model capable of generating photo-realistic images given any text input",
    "visibility": "public",
    "github_url": "https://github.com/replicate/cog-stable-diffusion",
    "paper_url": "https://arxiv.org/abs/2112.10752",
    "license_url": "https://huggingface.co/spaces/CompVis/stable-diffusion-license",
    "run_count": 0,
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/710f5e9f-9561-4e4f-9d1e-614205f62597/stable-diffusion.webp",
    "default_example": {
        "id": "uvb7ynit4bhpjds3vn4bx7npeq",
        "model": "stability-ai/stable-diffusion",
        "version": "db21e45d3f7023abc2a46ee38a23973f6dce16bb082a930b0c49861f96d1e5bf",
        "status": "succeeded",
        "input": {
            "prompt": "an astronaut riding a horse on mars, hd, dramatic lighting",
            "scheduler": "K_EULER",
            "num_outputs": 1,
            "guidance_scale": 7.5,
            "image_dimensions": "512x512",
            "num_inference_steps": 50
        },
        "output": [
            "https://replicate.delivery/pbxt/sWeZFZou6v3CPKuoJbqX46ugPaHT1DcsWYx0srPmGrMOCPYIA/out-0.png"
        ],
        "logs": "Using seed: 52443\ninput_shape: torch.Size([1, 77])\n  0%|          | 0/50 [00:00<?, ?it/s]\n 10%|█         | 5/50 [00:00<00:01, 41.06it/s]\n 20%|██        | 10/50 [00:00<00:00, 41.32it/s]\n 30%|███       | 15/50 [00:00<00:00, 43.77it/s]\n 42%|████▏     | 21/50 [00:00<00:00, 46.80it/s]\n 54%|█████▍    | 27/50 [00:00<00:00, 48.53it/s]\n 66%|██████▌   | 33/50 [00:00<00:00, 49.63it/s]\n 78%|███████▊  | 39/50 [00:00<00:00, 50.45it/s]\n 90%|█████████ | 45/50 [00:00<00:00, 50.90it/s]\n100%|██████████| 50/50 [00:01<00:00, 48.51it/s]",
        "error": null,
        "metrics": {
            "predict_time": 1.889956,
            "total_time": 2.03998
        },
        "created_at": "2023-04-10T15:45:31.434998Z",
        "started_at": "2023-04-10T15:45:31.585022Z",
        "completed_at": "2023-04-10T15:45:33.474978Z",
        "urls": {
            "get": "https://api.replicate.com/v1/predictions/uvb7ynit4bhpjds3vn4bx7npeq",
            "cancel": "https://api.replicate.com/v1/predictions/uvb7ynit4bhpjds3vn4bx7npeq/cancel"
        }
    },
    "latest_version": {
        "id": "ac732df83cea7fff18b8472768c88ad041fa750ff7682a21affe81863cbe77e4",
        "created_at": "2023-07-10T06:50:41.613128+00:00",
        "cog_version": "0.7.2",
        "openapi_schema": {
            "info": {
                "title": "Cog",
                "version": "0.1.0"
            },
            "paths": {
                "/": {
                    "get": {
                        "summary": "Root",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Root  Get"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "operationId": "root__get"
                    }
                },
                "/shutdown": {
                    "post": {
                        "summary": "Start Shutdown",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Start Shutdown Shutdown Post"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "operationId": "start_shutdown_shutdown_post"
                    }
                },
                "/predictions": {
                    "post": {
                        "summary": "Predict",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/PredictionResponse"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "parameters": [
                            {
                                "in": "header",
                                "name": "prefer",
                                "schema": {
                                    "type": "string",
                                    "title": "Prefer"
                                },
                                "required": false
                            }
                        ],
                        "description": "Run a single prediction on the model",
                        "operationId": "predict_predictions_post",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/PredictionRequest"
                                    }
                                }
                            }
                        }
                    }
                },
                "/health-check": {
                    "get": {
                        "summary": "Healthcheck",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Healthcheck Health Check Get"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "operationId": "healthcheck_health_check_get"
                    }
                },
                "/predictions/{prediction_id}": {
                    "put": {
                        "summary": "Predict Idempotent",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/PredictionResponse"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "parameters": [
                            {
                                "in": "path",
                                "name": "prediction_id",
                                "schema": {
                                    "type": "string",
                                    "title": "Prediction ID"
                                },
                                "required": true
                            },
                            {
                                "in": "header",
                                "name": "prefer",
                                "schema": {
                                    "type": "string",
                                    "title": "Prefer"
                                },
                                "required": false
                            }
                        ],
                        "description": "Run a single prediction on the model (idempotent creation).",
                        "operationId": "predict_idempotent_predictions__prediction_id__put",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/PredictionRequest"
                                            }
                                        ],
                                        "title": "Prediction Request"
                                    }
                                }
                            },
                            "required": true
                        }
                    }
                },
                "/predictions/{prediction_id}/cancel": {
                    "post": {
                        "summary": "Cancel",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "parameters": [
                            {
                                "in": "path",
                                "name": "prediction_id",
                                "schema": {
                                    "type": "string",
                                    "title": "Prediction ID"
                                },
                                "required": true
                            }
                        ],
                        "description": "Cancel a running prediction",
                        "operationId": "cancel_predictions__prediction_id__cancel_post"
                    }
                }
            },
            "openapi": "3.1.0",
            "components": {
                "schemas": {
                    "Input": {
                        "type": "object",
                        "title": "Input",
                        "properties": {
                            "seed": {
                                "type": "integer",
                                "title": "Seed",
                                "x-order": 8,
                                "description": "Random seed. Leave blank to randomize the seed"
                            },
                            "width": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/width"
                                    }
                                ],
                                "default": 768,
                                "x-order": 2,
                                "description": "Width of generated image in pixels. Needs to be a multiple of 64"
                            },
                            "height": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/height"
                                    }
                                ],
                                "default": 768,
                                "x-order": 1,
                                "description": "Height of generated image in pixels. Needs to be a multiple of 64"
                            },
                            "prompt": {
                                "type": "string",
                                "title": "Prompt",
                                "default": "a vision of paradise. unreal engine",
                                "x-order": 0,
                                "description": "Input prompt"
                            },
                            "scheduler": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/scheduler"
                                    }
                                ],
                                "default": "DPMSolverMultistep",
                                "x-order": 7,
                                "description": "Choose a scheduler."
                            },
                            "num_outputs": {
                                "type": "integer",
                                "title": "Num Outputs",
                                "default": 1,
                                "maximum": 4,
                                "minimum": 1,
                                "x-order": 4,
                                "description": "Number of images to generate."
                            },
                            "guidance_scale": {
                                "type": "number",
                                "title": "Guidance Scale",
                                "default": 7.5,
                                "maximum": 20,
                                "minimum": 1,
                                "x-order": 6,
                                "description": "Scale for classifier-free guidance"
                            },
                            "negative_prompt": {
                                "type": "string",
                                "title": "Negative Prompt",
                                "x-order": 3,
                                "description": "Specify things to not see in the output"
                            },
                            "num_inference_steps": {
                                "type": "integer",
                                "title": "Num Inference Steps",
                                "default": 50,
                                "maximum": 500,
                                "minimum": 1,
                                "x-order": 5,
                                "description": "Number of denoising steps"
                            }
                        }
                    },
                    "width": {
                        "enum": [
                            64,
                            128,
                            192,
                            256,
                            320,
                            384,
                            448,
                            512,
                            576,
                            640,
                            704,
                            768,
                            832,
                            896,
                            960,
                            1024
                        ],
                        "type": "integer",
                        "title": "width",
                        "description": "An enumeration."
                    },
                    "Output": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "title": "Output"
                    },
                    "Status": {
                        "enum": [
                            "starting",
                            "processing",
                            "succeeded",
                            "canceled",
                            "failed"
                        ],
                        "type": "string",
                        "title": "Status",
                        "description": "An enumeration."
                    },
                    "height": {
                        "enum": [
                            64,
                            128,
                            192,
                            256,
                            320,
                            384,
                            448,
                            512,
                            576,
                            640,
                            704,
                            768,
                            832,
                            896,
                            960,
                            1024
                        ],
                        "type": "integer",
                        "title": "height",
                        "description": "An enumeration."
                    },
                    "scheduler": {
                        "enum": [
                            "DDIM",
                            "K_EULER",
                            "DPMSolverMultistep",
                            "K_EULER_ANCESTRAL",
                            "PNDM",
                            "KLMS"
                        ],
                        "type": "string",
                        "title": "scheduler",
                        "description": "An enumeration."
                    },
                    "WebhookEvent": {
                        "enum": [
                            "start",
                            "output",
                            "logs",
                            "completed"
                        ],
                        "type": "string",
                        "title": "WebhookEvent",
                        "description": "An enumeration."
                    },
                    "ValidationError": {
                        "type": "object",
                        "title": "ValidationError",
                        "required": [
                            "loc",
                            "msg",
                            "type"
                        ],
                        "properties": {
                            "loc": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        }
                                    ]
                                },
                                "title": "Location"
                            },
                            "msg": {
                                "type": "string",
                                "title": "Message"
                            },
                            "type": {
                                "type": "string",
                                "title": "Error Type"
                            }
                        }
                    },
                    "PredictionRequest": {
                        "type": "object",
                        "title": "PredictionRequest",
                        "properties": {
                            "id": {
                                "type": "string",
                                "title": "Id"
                            },
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "webhook": {
                                "type": "string",
                                "title": "Webhook",
                                "format": "uri",
                                "maxLength": 65536,
                                "minLength": 1
                            },
                            "created_at": {
                                "type": "string",
                                "title": "Created At",
                                "format": "date-time"
                            },
                            "output_file_prefix": {
                                "type": "string",
                                "title": "Output File Prefix"
                            },
                            "webhook_events_filter": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WebhookEvent"
                                },
                                "default": [
                                    "completed",
                                    "logs",
                                    "output",
                                    "start"
                                ],
                                "uniqueItems": true
                            }
                        }
                    },
                    "PredictionResponse": {
                        "type": "object",
                        "title": "PredictionResponse",
                        "properties": {
                            "id": {
                                "type": "string",
                                "title": "Id"
                            },
                            "logs": {
                                "type": "string",
                                "title": "Logs",
                                "default": ""
                            },
                            "error": {
                                "type": "string",
                                "title": "Error"
                            },
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "output": {
                                "$ref": "#/components/schemas/Output"
                            },
                            "status": {
                                "$ref": "#/components/schemas/Status"
                            },
                            "metrics": {
                                "type": "object",
                                "title": "Metrics"
                            },
                            "version": {
                                "type": "string",
                                "title": "Version"
                            },
                            "created_at": {
                                "type": "string",
                                "title": "Created At",
                                "format": "date-time"
                            },
                            "started_at": {
                                "type": "string",
                                "title": "Started At",
                                "format": "date-time"
                            },
                            "completed_at": {
                                "type": "string",
                                "title": "Completed At",
                                "format": "date-time"
                            }
                        }
                    },
                    "HTTPValidationError": {
                        "type": "object",
                        "title": "HTTPValidationError",
                        "properties": {
                            "detail": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ValidationError"
                                },
                                "title": "Detail"
                            }
                        }
                    }
                }
            }
        }
    }
}