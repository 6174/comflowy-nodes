{
    "url": "https://replicate.com/yorickvp/llava-13b",
    "owner": "yorickvp",
    "name": "llava-13b",
    "description": "Visual instruction tuning towards large language and vision models with GPT-4 level capabilities",
    "visibility": "public",
    "github_url": "https://github.com/haotian-liu/LLaVA",
    "paper_url": "https://arxiv.org/abs/2310.03744",
    "license_url": "https://ai.meta.com/llama/license/",
    "run_count": 0,
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/454548d6-4978-4d85-bca3-d067dfc031bf/llava.png",
    "default_example": {
        "id": "x5pthttb2mghadkxlvymeprkce",
        "model": "yorickvp/llava-13b",
        "version": "a0fdc44e4f2e1f20f2bb4e27846899953ac8e66c5886c5878fa1d6b73ce009e5",
        "status": "succeeded",
        "input": {
            "image": "https://replicate.delivery/pbxt/KRULC43USWlEx4ZNkXltJqvYaHpEx2uJ4IyUQPRPwYb8SzPf/view.jpg",
            "top_p": 1,
            "prompt": "Are you allowed to swim here?",
            "max_tokens": 1024,
            "temperature": 0.2
        },
        "output": [
            "Yes, ",
            "you ",
            "are ",
            "allowed ",
            "to ",
            "swim ",
            "in ",
            "the ",
            "lake ",
            "near ",
            "the ",
            "pier. ",
            "The ",
            "image ",
            "shows ",
            "a ",
            "pier ",
            "extending ",
            "out ",
            "into ",
            "the ",
            "water, ",
            "and ",
            "the ",
            "water ",
            "appears ",
            "to ",
            "be ",
            "calm, ",
            "making ",
            "it ",
            "a ",
            "suitable ",
            "spot ",
            "for ",
            "swimming. ",
            "However, ",
            "it ",
            "is ",
            "always ",
            "important ",
            "to ",
            "be ",
            "cautious ",
            "and ",
            "aware ",
            "of ",
            "any ",
            "potential ",
            "hazards ",
            "or ",
            "regulations ",
            "in ",
            "the ",
            "area ",
            "before ",
            "swimming."
        ],
        "logs": null,
        "error": null,
        "metrics": {
            "predict_time": 5.331965,
            "total_time": 108.061238
        },
        "created_at": "2024-02-21T12:51:23.166549Z",
        "started_at": "2024-02-21T12:53:05.895822Z",
        "completed_at": "2024-02-21T12:53:11.227787Z",
        "urls": {
            "stream": "https://streaming-api.svc.us.c.replicate.net/v1/streams/ektia4t2ommprjapf67bszhlrckwdevipz2pjbzfxhcc6cseoyva",
            "get": "https://api.replicate.com/v1/predictions/x5pthttb2mghadkxlvymeprkce",
            "cancel": "https://api.replicate.com/v1/predictions/x5pthttb2mghadkxlvymeprkce/cancel"
        }
    },
    "latest_version": {
        "id": "80537f9eead1a5bfa72d5ac6ea6414379be41d4d4f6679fd776e9535d1eb58bb",
        "created_at": "2024-07-17T14:00:16.459010+00:00",
        "cog_version": "0.9.5",
        "openapi_schema": {
            "info": {
                "title": "Cog",
                "version": "0.1.0"
            },
            "paths": {
                "/": {
                    "get": {
                        "summary": "Root",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Root  Get"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "operationId": "root__get"
                    }
                },
                "/shutdown": {
                    "post": {
                        "summary": "Start Shutdown",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Start Shutdown Shutdown Post"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "operationId": "start_shutdown_shutdown_post"
                    }
                },
                "/trainings": {
                    "post": {
                        "summary": "Train",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/TrainingResponse"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "parameters": [
                            {
                                "in": "header",
                                "name": "prefer",
                                "schema": {
                                    "type": "string",
                                    "title": "Prefer"
                                },
                                "required": false
                            }
                        ],
                        "operationId": "train_trainings_post",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/TrainingRequest"
                                    }
                                }
                            }
                        }
                    }
                },
                "/predictions": {
                    "post": {
                        "summary": "Predict",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/PredictionResponse"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "parameters": [
                            {
                                "in": "header",
                                "name": "prefer",
                                "schema": {
                                    "type": "string",
                                    "title": "Prefer"
                                },
                                "required": false
                            }
                        ],
                        "description": "Run a single prediction on the model",
                        "operationId": "predict_predictions_post",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/PredictionRequest"
                                    }
                                }
                            }
                        }
                    }
                },
                "/health-check": {
                    "get": {
                        "summary": "Healthcheck",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Healthcheck Health Check Get"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "operationId": "healthcheck_health_check_get"
                    }
                },
                "/trainings/{training_id}": {
                    "put": {
                        "summary": "Train Idempotent",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/PredictionResponse"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "parameters": [
                            {
                                "in": "path",
                                "name": "training_id",
                                "schema": {
                                    "type": "string",
                                    "title": "Training ID"
                                },
                                "required": true
                            },
                            {
                                "in": "header",
                                "name": "prefer",
                                "schema": {
                                    "type": "string",
                                    "title": "Prefer"
                                },
                                "required": false
                            }
                        ],
                        "operationId": "train_idempotent_trainings__training_id__put",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/TrainingRequest"
                                            }
                                        ],
                                        "title": "Training Request"
                                    }
                                }
                            },
                            "required": true
                        }
                    }
                },
                "/predictions/{prediction_id}": {
                    "put": {
                        "summary": "Predict Idempotent",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/PredictionResponse"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "parameters": [
                            {
                                "in": "path",
                                "name": "prediction_id",
                                "schema": {
                                    "type": "string",
                                    "title": "Prediction ID"
                                },
                                "required": true
                            },
                            {
                                "in": "header",
                                "name": "prefer",
                                "schema": {
                                    "type": "string",
                                    "title": "Prefer"
                                },
                                "required": false
                            }
                        ],
                        "description": "Run a single prediction on the model (idempotent creation).",
                        "operationId": "predict_idempotent_predictions__prediction_id__put",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/PredictionRequest"
                                            }
                                        ],
                                        "title": "Prediction Request"
                                    }
                                }
                            },
                            "required": true
                        }
                    }
                },
                "/trainings/{training_id}/cancel": {
                    "post": {
                        "summary": "Cancel Training",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Cancel Training Trainings  Training Id  Cancel Post"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "parameters": [
                            {
                                "in": "path",
                                "name": "training_id",
                                "schema": {
                                    "type": "string",
                                    "title": "Training ID"
                                },
                                "required": true
                            }
                        ],
                        "operationId": "cancel_training_trainings__training_id__cancel_post"
                    }
                },
                "/predictions/{prediction_id}/cancel": {
                    "post": {
                        "summary": "Cancel",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "parameters": [
                            {
                                "in": "path",
                                "name": "prediction_id",
                                "schema": {
                                    "type": "string",
                                    "title": "Prediction ID"
                                },
                                "required": true
                            }
                        ],
                        "description": "Cancel a running prediction",
                        "operationId": "cancel_predictions__prediction_id__cancel_post"
                    }
                }
            },
            "openapi": "3.0.2",
            "components": {
                "schemas": {
                    "Input": {
                        "type": "object",
                        "title": "Input",
                        "required": [
                            "image",
                            "prompt"
                        ],
                        "properties": {
                            "image": {
                                "type": "string",
                                "title": "Image",
                                "format": "uri",
                                "x-order": 0,
                                "description": "Input image"
                            },
                            "top_p": {
                                "type": "number",
                                "title": "Top P",
                                "default": 1,
                                "maximum": 1,
                                "minimum": 0,
                                "x-order": 2,
                                "description": "When decoding text, samples from the top p percentage of most likely tokens; lower to ignore less likely tokens"
                            },
                            "prompt": {
                                "type": "string",
                                "title": "Prompt",
                                "x-order": 1,
                                "description": "Prompt to use for text generation"
                            },
                            "max_tokens": {
                                "type": "integer",
                                "title": "Max Tokens",
                                "default": 1024,
                                "minimum": 0,
                                "x-order": 4,
                                "description": "Maximum number of tokens to generate. A word is generally 2-3 tokens"
                            },
                            "temperature": {
                                "type": "number",
                                "title": "Temperature",
                                "default": 0.2,
                                "minimum": 0,
                                "x-order": 3,
                                "description": "Adjusts randomness of outputs, greater than 1 is random and 0 is deterministic"
                            }
                        }
                    },
                    "Output": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Output",
                        "x-cog-array-type": "iterator",
                        "x-cog-array-display": "concatenate"
                    },
                    "Status": {
                        "enum": [
                            "starting",
                            "processing",
                            "succeeded",
                            "canceled",
                            "failed"
                        ],
                        "type": "string",
                        "title": "Status",
                        "description": "An enumeration."
                    },
                    "WebhookEvent": {
                        "enum": [
                            "start",
                            "output",
                            "logs",
                            "completed"
                        ],
                        "type": "string",
                        "title": "WebhookEvent",
                        "description": "An enumeration."
                    },
                    "TrainingInput": {
                        "type": "object",
                        "title": "TrainingInput",
                        "required": [
                            "train_data"
                        ],
                        "properties": {
                            "train_data": {
                                "type": "string",
                                "title": "Train Data",
                                "x-order": 0,
                                "description": "https url or path name of a zipfile containing training data. Training data should have a json file data.json and an images/ folder. data.json should link the images from images/ to conversations."
                            },
                            "learning_rate": {
                                "type": "number",
                                "title": "Learning Rate",
                                "default": 0.0002,
                                "minimum": 1e-10,
                                "x-order": 2,
                                "description": "The learning rate during training"
                            },
                            "model_max_length": {
                                "type": "integer",
                                "title": "Model Max Length",
                                "default": 2048,
                                "minimum": 1,
                                "x-order": 3,
                                "description": "The maximum length (in number of tokens) for the inputs to the model."
                            },
                            "num_train_epochs": {
                                "type": "integer",
                                "title": "Num Train Epochs",
                                "default": 1,
                                "maximum": 1000,
                                "minimum": 1,
                                "x-order": 1,
                                "description": "The number of training epochs"
                            }
                        }
                    },
                    "TrainingOutput": {
                        "type": "object",
                        "title": "TrainingOutput",
                        "required": [
                            "weights"
                        ],
                        "properties": {
                            "weights": {
                                "type": "string",
                                "title": "Weights",
                                "format": "uri"
                            }
                        }
                    },
                    "TrainingRequest": {
                        "type": "object",
                        "title": "TrainingRequest",
                        "properties": {
                            "id": {
                                "type": "string",
                                "title": "Id"
                            },
                            "input": {
                                "$ref": "#/components/schemas/TrainingInput"
                            },
                            "webhook": {
                                "type": "string",
                                "title": "Webhook",
                                "format": "uri",
                                "maxLength": 65536,
                                "minLength": 1
                            },
                            "created_at": {
                                "type": "string",
                                "title": "Created At",
                                "format": "date-time"
                            },
                            "output_file_prefix": {
                                "type": "string",
                                "title": "Output File Prefix"
                            },
                            "webhook_events_filter": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WebhookEvent"
                                },
                                "default": [
                                    "start",
                                    "output",
                                    "logs",
                                    "completed"
                                ]
                            }
                        }
                    },
                    "ValidationError": {
                        "type": "object",
                        "title": "ValidationError",
                        "required": [
                            "loc",
                            "msg",
                            "type"
                        ],
                        "properties": {
                            "loc": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        }
                                    ]
                                },
                                "title": "Location"
                            },
                            "msg": {
                                "type": "string",
                                "title": "Message"
                            },
                            "type": {
                                "type": "string",
                                "title": "Error Type"
                            }
                        }
                    },
                    "TrainingResponse": {
                        "type": "object",
                        "title": "TrainingResponse",
                        "properties": {
                            "id": {
                                "type": "string",
                                "title": "Id"
                            },
                            "logs": {
                                "type": "string",
                                "title": "Logs",
                                "default": ""
                            },
                            "error": {
                                "type": "string",
                                "title": "Error"
                            },
                            "input": {
                                "$ref": "#/components/schemas/TrainingInput"
                            },
                            "output": {
                                "$ref": "#/components/schemas/TrainingOutput"
                            },
                            "status": {
                                "$ref": "#/components/schemas/Status"
                            },
                            "metrics": {
                                "type": "object",
                                "title": "Metrics"
                            },
                            "version": {
                                "type": "string",
                                "title": "Version"
                            },
                            "created_at": {
                                "type": "string",
                                "title": "Created At",
                                "format": "date-time"
                            },
                            "started_at": {
                                "type": "string",
                                "title": "Started At",
                                "format": "date-time"
                            },
                            "completed_at": {
                                "type": "string",
                                "title": "Completed At",
                                "format": "date-time"
                            }
                        }
                    },
                    "PredictionRequest": {
                        "type": "object",
                        "title": "PredictionRequest",
                        "properties": {
                            "id": {
                                "type": "string",
                                "title": "Id"
                            },
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "webhook": {
                                "type": "string",
                                "title": "Webhook",
                                "format": "uri",
                                "maxLength": 65536,
                                "minLength": 1
                            },
                            "created_at": {
                                "type": "string",
                                "title": "Created At",
                                "format": "date-time"
                            },
                            "output_file_prefix": {
                                "type": "string",
                                "title": "Output File Prefix"
                            },
                            "webhook_events_filter": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WebhookEvent"
                                },
                                "default": [
                                    "start",
                                    "output",
                                    "logs",
                                    "completed"
                                ]
                            }
                        }
                    },
                    "PredictionResponse": {
                        "type": "object",
                        "title": "PredictionResponse",
                        "properties": {
                            "id": {
                                "type": "string",
                                "title": "Id"
                            },
                            "logs": {
                                "type": "string",
                                "title": "Logs",
                                "default": ""
                            },
                            "error": {
                                "type": "string",
                                "title": "Error"
                            },
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "output": {
                                "$ref": "#/components/schemas/Output"
                            },
                            "status": {
                                "$ref": "#/components/schemas/Status"
                            },
                            "metrics": {
                                "type": "object",
                                "title": "Metrics"
                            },
                            "version": {
                                "type": "string",
                                "title": "Version"
                            },
                            "created_at": {
                                "type": "string",
                                "title": "Created At",
                                "format": "date-time"
                            },
                            "started_at": {
                                "type": "string",
                                "title": "Started At",
                                "format": "date-time"
                            },
                            "completed_at": {
                                "type": "string",
                                "title": "Completed At",
                                "format": "date-time"
                            }
                        }
                    },
                    "HTTPValidationError": {
                        "type": "object",
                        "title": "HTTPValidationError",
                        "properties": {
                            "detail": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ValidationError"
                                },
                                "title": "Detail"
                            }
                        }
                    }
                }
            }
        }
    }
}